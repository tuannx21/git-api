!function c(a,u,i){function l(t,e){if(!u[t]){if(!a[t]){var n="function"==typeof require&&require;if(!e&&n)return n(t,!0);if(s)return s(t,!0);var r=new Error("Cannot find module '"+t+"'");throw r.code="MODULE_NOT_FOUND",r}var o=u[t]={exports:{}};a[t][0].call(o.exports,function(e){return l(a[t][1][e]||e)},o,o.exports,c,a,u,i)}return u[t].exports}for(var s="function"==typeof require&&require,e=0;e<i.length;e++)l(i[e]);return l}({1:[function(e,t,n){"use strict";var c=e("./promiseAPI"),r=document.querySelector("#input-new-repo"),a=document.querySelector("#userAvatar"),u=document.querySelector("#userName"),i=document.querySelector("#userEmail"),l=document.querySelector("#repoList"),o=function(t){var e=document.querySelector("#repo-template").content.cloneNode(!0),n=e.querySelector("li"),r=n.querySelector("#repoName"),o=n.querySelector("#btnRemoveRepo");n.id="repo"+t.id,r.value=t.name,r.addEventListener("dblclick",function(){this.readOnly=!1}),r.addEventListener("keypress",function(e){13!==e.which&&13!==e.keyCode||(this.readOnly=!0,(0,c.renameRepo)(t.owner.login,t.name,this.value).then(alert("U have edited success, it may take a while to completely rename")).catch(alert("something happen. Abort change")))}),o.addEventListener("click",function(){var e;!0===confirm("you sure you want to delete repo ".concat(t.name," ?????"))&&(0,c.deleteRepo)(t.owner.login,t.name).then((e=t.id,void(document.querySelector("#repo".concat(e)).style.display="none"))).catch(alert("delete fail"))}),l.appendChild(e)};(function(){(0,c.getUser)().then(function(e){var t,n,r,o,c;n=(t=e).name,r=t.login,o=t.email,c=t.avatar_url,a.src=c,u.innerHTML=n||r,i.innerHTML=o}),(0,c.getAllRepos)().then(function(e){e.map(function(e){o(e)})})})(),r.addEventListener("keypress",function(e){if(13===e.which||13===e.keyCode){var t=r.value;(0,c.createRepo)({name:t}).then(function(e){o(e)}),r.value=""}})},{"./promiseAPI":2}],2:[function(e,t,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.deleteRepo=n.createRepo=n.renameRepo=n.getAllRepos=n.getUser=n.callAPI=void 0;var r=function(e,t,n){return fetch("".concat("https://api.github.com").concat(e),{method:t,headers:{Authorization:"Bearer ee4fecbcfa2218525f059ed37b42a0e44cadaf88"},body:null==n?null:JSON.stringify(n)}).then(function(e){return e.json()})};n.callAPI=r;n.getUser=function(){return r("/user","GET")};n.getAllRepos=function(){return r("/user/repos","GET")};n.renameRepo=function(e,t,n){return r("/repos/".concat(e,"/").concat(t),"PATCH",{name:n})};n.createRepo=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{name:"Repo-create-by-api"};return r("/user/repos","POST",e)};n.deleteRepo=function(e,t){return r("/repos/".concat(e,"/").concat(t),"DELETE")}},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
