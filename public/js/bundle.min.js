!function i(c,a,u){function s(t,e){if(!a[t]){if(!c[t]){var r="function"==typeof require&&require;if(!e&&r)return r(t,!0);if(l)return l(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var o=a[t]={exports:{}};c[t][0].call(o.exports,function(e){return s(c[t][1][e]||e)},o,o.exports,i,c,a,u)}return a[t].exports}for(var l="function"==typeof require&&require,e=0;e<u.length;e++)s(u[e]);return s}({1:[function(e,t,r){"use strict";var c=e("./promiseAPI"),o="git-access-key",i=document.querySelector("#input-access-key"),a=document.querySelector("#userAvatar"),u=document.querySelector("#userName"),s=document.querySelector("#userEmail"),l=document.querySelector("#repoList"),d=function(){l.innerHTML=null,s.innerHTML=null,u.innerHTML=null,a.src=null},n=function(){i.addEventListener("keypress",function(e){if(13===e.which||13===e.keyCode){d();var t=i.value;r=o,n=t,window.localStorage.setItem(r,JSON.stringify(n)),p(t),i.value=""}var r,n})},p=function(e){d();var t,r=void 0===e?(t=o,JSON.parse(window.localStorage.getItem(t))).toString():e;(0,c.getUser)(r).then(function(e){var t,r,n,o,i;r=(t=e).name,n=t.login,o=t.email,i=t.avatar_url,a.src=i,u.innerHTML=r||n,s.innerHTML=o}),(0,c.getAllRepos)(r).then(function(e){var i;i=r,e.map(function(t){var e=document.querySelector("#repo-template").content.cloneNode(!0),r=e.querySelector("li"),n=r.querySelector("#repoName"),o=r.querySelector("#btnRemoveRepo");r.id=t.id,n.value=t.name,n.addEventListener("dblclick",function(){this.readOnly=!1}),n.addEventListener("keypress",function(e){13!==e.which&&13!==e.keyCode||(this.readOnly=!0,(0,c.renameRepo)(i,t.owner.login,t.name,this.value).then(alert("U have edited success, it may take a while to completely rename")))}),o.addEventListener("click",function(){!0===confirm("you sure you want to delete repo ".concat(t.name," ?????"))&&((0,c.deleteRepo)(i,t.owner.login,t.name),p())}),l.appendChild(e)})})};p(),n()},{"./promiseAPI":2}],2:[function(e,t,r){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.deleteRepo=r.createRepo=r.renameRepo=r.getAllRepos=r.getUser=void 0;r.getUser=function(e){return fetch("https://api.github.com/user",{headers:{Authorization:"Bearer ".concat(e)}}).then(function(e){return e.json()})};r.getAllRepos=function(e){return fetch("https://api.github.com/user/repos",{headers:{Authorization:"Bearer ".concat(e)}}).then(function(e){return e.json()})};r.renameRepo=function(e,t,r,n){return fetch("https://api.github.com/repos/".concat(t,"/").concat(r),{method:"PATCH",headers:{Authorization:"Bearer ".concat(e)},body:JSON.stringify({name:n})})};r.createRepo=function(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{name:"Repo-create-by-api"};return fetch("https://api.github.com/user/repos",{method:"POST",headers:{Authorization:"Bearer ".concat(e)},body:JSON.stringify(t)})};r.deleteRepo=function(e,t,r){return fetch("https://api.github.com/repos/".concat(t,"/").concat(r),{method:"DELETE",headers:{Authorization:"Bearer ".concat(e)}}).catch(function(e){alert("errorrrrrr")})}},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
